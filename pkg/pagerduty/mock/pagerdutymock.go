// Code generated by MockGen. DO NOT EDIT.
// Source: pagerduty.go

// Package pdmock is a generated GoMock package.
package pdmock

import (
	reflect "reflect"

	pagerduty "github.com/PagerDuty/go-pagerduty"
	gomock "github.com/golang/mock/gomock"
)

// MockPagerDutyClient is a mock of PagerDutyClient interface.
type MockPagerDutyClient struct {
	ctrl     *gomock.Controller
	recorder *MockPagerDutyClientMockRecorder
}

// MockPagerDutyClientMockRecorder is the mock recorder for MockPagerDutyClient.
type MockPagerDutyClientMockRecorder struct {
	mock *MockPagerDutyClient
}

// NewMockPagerDutyClient creates a new mock instance.
func NewMockPagerDutyClient(ctrl *gomock.Controller) *MockPagerDutyClient {
	mock := &MockPagerDutyClient{ctrl: ctrl}
	mock.recorder = &MockPagerDutyClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPagerDutyClient) EXPECT() *MockPagerDutyClientMockRecorder {
	return m.recorder
}

// CreateIncident mocks base method.
func (m *MockPagerDutyClient) CreateIncident(description string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateIncident", description)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateIncident indicates an expected call of CreateIncident.
func (mr *MockPagerDutyClientMockRecorder) CreateIncident(description interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIncident", reflect.TypeOf((*MockPagerDutyClient)(nil).CreateIncident), description)
}

// GetClusterID mocks base method.
func (m *MockPagerDutyClient) GetClusterID(pdClient *pagerduty.Client, incidentID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterID", pdClient, incidentID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterID indicates an expected call of GetClusterID.
func (mr *MockPagerDutyClientMockRecorder) GetClusterID(pdClient, incidentID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterID", reflect.TypeOf((*MockPagerDutyClient)(nil).GetClusterID), pdClient, incidentID)
}

// GetClusterIDFromAlert mocks base method.
func (m *MockPagerDutyClient) GetClusterIDFromAlert(alert *pagerduty.IncidentAlert) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterIDFromAlert", alert)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterIDFromAlert indicates an expected call of GetClusterIDFromAlert.
func (mr *MockPagerDutyClientMockRecorder) GetClusterIDFromAlert(alert interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterIDFromAlert", reflect.TypeOf((*MockPagerDutyClient)(nil).GetClusterIDFromAlert), alert)
}

// GetClusterIDFromAlertList mocks base method.
func (m *MockPagerDutyClient) GetClusterIDFromAlertList(alertList *pagerduty.ListAlertsResponse) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterIDFromAlertList", alertList)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterIDFromAlertList indicates an expected call of GetClusterIDFromAlertList.
func (mr *MockPagerDutyClientMockRecorder) GetClusterIDFromAlertList(alertList interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterIDFromAlertList", reflect.TypeOf((*MockPagerDutyClient)(nil).GetClusterIDFromAlertList), alertList)
}
